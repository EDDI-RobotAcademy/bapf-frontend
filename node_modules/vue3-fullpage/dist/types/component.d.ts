import { VNode } from 'vue';
declare const _default: import("vue").DefineComponent<{
    disableClasses: {
        type: BooleanConstructor;
        default: boolean;
    };
    navigationSize: {
        type: (NumberConstructor | StringConstructor)[];
        default: string;
    };
    navigationGap: {
        type: StringConstructor;
        default: string;
    };
    navigationColour: {
        type: StringConstructor;
        default: string;
    };
    navigationOpacityOuter: {
        type: (NumberConstructor | StringConstructor)[];
        default: number;
    };
    navigationOpacityOuterHover: {
        type: (NumberConstructor | StringConstructor)[];
        default: number;
    };
    navigationOpacityOuterActive: {
        type: (NumberConstructor | StringConstructor)[];
        default: number;
    };
    activeColour: {
        type: StringConstructor;
        default: string;
    };
    updateHistory: {
        type: BooleanConstructor;
        default: boolean;
    };
    prefix: {
        type: StringConstructor;
        default: string;
    };
    hideNavigation: {
        type: BooleanConstructor;
        default: boolean;
    };
    tag: {
        type: StringConstructor;
        default: string;
    };
    pageClass: {
        type: StringConstructor;
        default: string;
    };
    navigationClass: {
        type: StringConstructor;
        default: string;
    };
    navigationDotClass: {
        type: StringConstructor;
        default: string;
    };
    navigationDotInnerClass: {
        type: StringConstructor;
        default: string;
    };
    modelValue: {
        type: NumberConstructor;
        default: number;
    };
}, () => VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("update:modelValue" | "page-enter" | "page-leave")[], "update:modelValue" | "page-enter" | "page-leave", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    disableClasses: {
        type: BooleanConstructor;
        default: boolean;
    };
    navigationSize: {
        type: (NumberConstructor | StringConstructor)[];
        default: string;
    };
    navigationGap: {
        type: StringConstructor;
        default: string;
    };
    navigationColour: {
        type: StringConstructor;
        default: string;
    };
    navigationOpacityOuter: {
        type: (NumberConstructor | StringConstructor)[];
        default: number;
    };
    navigationOpacityOuterHover: {
        type: (NumberConstructor | StringConstructor)[];
        default: number;
    };
    navigationOpacityOuterActive: {
        type: (NumberConstructor | StringConstructor)[];
        default: number;
    };
    activeColour: {
        type: StringConstructor;
        default: string;
    };
    updateHistory: {
        type: BooleanConstructor;
        default: boolean;
    };
    prefix: {
        type: StringConstructor;
        default: string;
    };
    hideNavigation: {
        type: BooleanConstructor;
        default: boolean;
    };
    tag: {
        type: StringConstructor;
        default: string;
    };
    pageClass: {
        type: StringConstructor;
        default: string;
    };
    navigationClass: {
        type: StringConstructor;
        default: string;
    };
    navigationDotClass: {
        type: StringConstructor;
        default: string;
    };
    navigationDotInnerClass: {
        type: StringConstructor;
        default: string;
    };
    modelValue: {
        type: NumberConstructor;
        default: number;
    };
}>> & {
    "onUpdate:modelValue"?: (...args: any[]) => any;
    "onPage-enter"?: (...args: any[]) => any;
    "onPage-leave"?: (...args: any[]) => any;
}, {
    updateHistory: boolean;
    disableClasses: boolean;
    navigationSize: string | number;
    navigationGap: string;
    navigationColour: string;
    navigationOpacityOuter: string | number;
    navigationOpacityOuterHover: string | number;
    navigationOpacityOuterActive: string | number;
    activeColour: string;
    prefix: string;
    hideNavigation: boolean;
    tag: string;
    pageClass: string;
    navigationClass: string;
    navigationDotClass: string;
    navigationDotInnerClass: string;
    modelValue: number;
}>;
export default _default;
